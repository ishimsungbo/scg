package com.scg.event;


import com.scg.api.common.UploadFunction;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.servlet.http.HttpServletRequest;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

@Controller
@RequestMapping("/event/")
public class EventController {

    private static final Logger logger = LoggerFactory.getLogger(EventController.class);

    @Autowired
    EventService eventService;

    @RequestMapping(value = "eventmain")
    public String home(Model model,
                       HttpServletRequest request){


        List<Eventrequest> eventrequestList = eventService.getEventReqList(18);

        model.addAttribute("list",eventrequestList);
        model.addAttribute("userCount",eventrequestList.size());

        return "/event/eventmain";
    }

    @RequestMapping(value = "evententer")
    public String enter(){

        return "/event/evententer";
    }

    @RequestMapping(value = "enter" , method = RequestMethod.POST)
    public String enterEvent(
            HttpServletRequest request
            ,@ModelAttribute("vo") EventMain eventMain,
                             @RequestParam("date") String date
    ){
        SimpleDateFormat transFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

        try {
            // 스트링 타입을 => 데이트 타입으로 변경해준다.
            Date parseDate = transFormat.parse(date);
            eventMain.setTime(parseDate);

        } catch (ParseException e) {
            e.printStackTrace();
        }

        String upfileName = eventMain.getFile().getOriginalFilename(); //get file name

        if (!eventMain.getFile().isEmpty()) {

            String rootPath = request.getSession().getServletContext().getRealPath("/") + "/" + "resources/event/";
            eventMain.setImg("http://14.63.220.208:80/resources/event/"+upfileName);

            UploadFunction uploadFunction = new UploadFunction();
            uploadFunction.writeFile(eventMain.getFile(), upfileName, request, rootPath);
        }

        eventService.saveEvent(eventMain);

        return "redirect:" +"/event/eventmain";
    }

    @RequestMapping(value = "eventmap")
    public String eventMap(){

        return "/event/eventmap";
    }

    @RequestMapping(value = "request", method = RequestMethod.POST)
    public String request(@ModelAttribute("vo") Eventrequest eventrequest){

        eventService.saveEvent(eventrequest);

        return "redirect:" +"/event/eventmain";
    }

}
